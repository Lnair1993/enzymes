function tests = MOITest
    tests = functiontests(localfunctions);
end
L = 1e

% test for sphere of radius 1 and mass 1
function testSphere(testCase)
    mass = 1;
    radius = 1;
    test_SQ = [radius radius radius 1 1 0 0 0 0 0 0 0 0 0 0];
    [~, I] = CalcCompositeMomentInertia( test_SQ, mass);  
    % expected Ixx in SI (standard units)
    expI_xx = (2/5)*radius^5;
    verifyEqual(testCase,I(1,1),expI_xx,'AbsTol',1e-10);
    verifyEqual(testCase,I(1,1),I(2,2),'AbsTol',1e-10);
    verifyEqual(testCase,I(1,1),I(3,3),'AbsTol',1e-10);
end

% test for sphere of radius 1 and mass 1
function testSmallSphere(testCase)
    mass = .1;
    radius = .1;
    test_SQ = [radius radius radius 1 1 0 0 0 0 0 0 0 0 0 0];
    [~, I] = CalcCompositeMomentInertia( test_SQ, mass);  
    % expected Ixx in SI (standard units)
    expI_xx = (2/5)*radius^5;
    verifyEqual(testCase,I(1,1),expI_xx,'AbsTol',1e-10);
    verifyEqual(testCase,I(1,1),I(2,2),'AbsTol',1e-10);
    verifyEqual(testCase,I(1,1),I(3,3),'AbsTol',1e-10);
end

% test for sphere of radius 20 and mass 30
function testLargeSphere(testCase)
    mass = 30;
    radius = 20;
    volume = (4/3)*pi*radius^3;
    density = mass / volume;
    test_SQ = [radius radius radius 1 1 0 0 0 0 0 0 0 0 0 0];
    [~, I] = CalcCompositeMomentInertia( test_SQ, mass);    
    expI_xx = (8*pi/15)*density*radius^5;
    verifyEqual(testCase,I(1,1),expI_xx,'AbsTol',1e-10);
    verifyEqual(testCase,I(1,1),I(2,2),'AbsTol',1e-10);
    verifyEqual(testCase,I(1,1),I(3,3),'AbsTol',1e-10);
end

% test for spherical ellipsoid of radii 1, 2, 3 and mass 3
function testSphericalEllipsoid(testCase)
    mass = 3;
    a = 1; b = 2; c = 3;
    test_SQ = [a b c 1 1 0 0 0 0 0 0 0 0 0 0];
    volume = VolumeSQ(test_SQ);
    density = mass / volume;    
    [~, I] = CalcCompositeMomentInertia( test_SQ, mass); 
    expI_xx = (4*pi/15)*a*b*c*(b^2+c^2)*density;
    verifyEqual(testCase,I(1,1),expI_xx,'AbsTol',1e-10);
    expI_yy = (4*pi/15)*a*b*c*(a^2+c^2)*density;
    verifyEqual(testCase,I(2,2),expI_yy,'AbsTol',1e-10);
    expI_zz = (4*pi/15)*a*b*c*(a^2+b^2)*density;
    verifyEqual(testCase,I(3,3),expI_zz,'AbsTol',1e-10);
end

% test for cube of side 2 mass 8
function testCube(testCase)
    mass = 8;
    side1 = 2; side2 = 2; side3 = 2;
    test_SQ = [side1/2 side2/2 side3/2 1e-10 1e-10 0 0 0 0 0 0 0 0 0 0];
    [~, I] = CalcCompositeMomentInertia(test_SQ, mass);   
    cube_density = mass / (side1*side2*side3);
    expI = zeros(3,3);
    expI(1,1) = (1/12)*(side2^2+side3^2)*mass;  
    verifyEqual(testCase,I(1,1),expI(1,1),'AbsTol',1e-10);
    expI(2,2) = (1/12)*(side1^2+side3^2)*mass;  
    verifyEqual(testCase,I(1,1),expI(1,1),'AbsTol',1e-10);
    expI(3,3) = (1/12)*(side1^2+side2^2)*mass;  
    verifyEqual(testCase,I(1,1),expI(1,1),'AbsTol',1e-10);
end

% test for cube of side 2, 3, 4 and mass 1
function testCuboid(testCase)
    mass = 1;
    side1 = 2; side2 = 3; side3 = 4;
    test_SQ = [side1/2 side2/2 side3/2 1e-10 1e-10 0 0 0 0 0 0 0 0 0 0];
    [~, I] = CalcCompositeMomentInertia(test_SQ, mass);   
    cube_density = mass / (side1*side2*side3);
    expI = zeros(3,3);
    expI(1,1) = (1/12)*(side2^2+side3^2)*mass;  
    verifyEqual(testCase,I(1,1),expI(1,1),'AbsTol',1e-10);
    expI(2,2) = (1/12)*(side1^2+side3^2)*mass;  
    verifyEqual(testCase,I(1,1),expI(1,1),'AbsTol',1e-10);
    expI(3,3) = (1/12)*(side1^2+side2^2)*mass;  
    verifyEqual(testCase,I(1,1),expI(1,1),'AbsTol',1e-10);
end

